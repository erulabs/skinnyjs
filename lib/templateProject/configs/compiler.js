// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = function(app) {
    var coffee, sass;
    coffee = require('coffee-script');
    sass = require('node-sass');
    app.compiler['.coffee'] = function(file) {
      return app.fs.readFile(file, 'utf8', (function(_this) {
        return function(err, rawCode) {
          var cs, error;
          if (err) {
            console.log(app.clr.red + 'compileAsset() error:' + app.clr.reset, err);
          }
          console.log(app.clr.cyan + 'CoffeeScript:' + app.clr.reset, file.replace(app.cfg.path, ''));
          try {
            cs = coffee.compile(rawCode);
          } catch (_error) {
            error = _error;
            return console.log(app.clr.red + 'CoffeeScript error:' + app.clr.reset, file.replace(app.cfg.path, '') + ':', error.message, "on lines:", error.location.first_line + '-' + error.location.last_line);
          }
          if (error == null) {
            return app.fs.writeFile(file.replace('.coffee', '.js'), cs, function(err) {
              if (err) {
                return console.log(app.clr.red + 'autocompile write error! file' + app.clr.reset, file.replace('.coffee', '.js'), 'error:', err);
              }
            });
          }
        };
      })(this));
    };
    return app.compiler['.scss'] = function(file) {
      console.log(app.clr.cyan + 'SASS:' + app.clr.reset, file.replace(app.cfg.path, ''));
      return sass.render({
        file: file,
        success: (function(_this) {
          return function(css) {
            return app.fs.writeFile(file.replace('.scss', '.css'), css, function(err) {
              if (err) {
                return console.log(app.clr.red + 'autocompile write error! file' + app.clr.reset, file.replace('.scss', '.css'), 'error:', err);
              }
            });
          };
        })(this),
        error: (function(_this) {
          return function(error) {
            return console.log('SCSS Compile error:', error);
          };
        })(this)
      });
    };
  };

}).call(this);
