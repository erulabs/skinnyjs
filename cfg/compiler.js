// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = function(app) {
    var coffee, colors, sass;
    coffee = require('coffee-script');
    sass = require('node-sass');
    colors = {
      red: "\u001b[31m",
      blue: "\u001b[34m",
      green: "\u001b[32m",
      cyan: "\u001b[36m",
      reset: "\u001b[0m"
    };
    app.compiler['.coffee'] = function(file) {
      var _this = this;
      return app.fs.readFile(file, 'utf8', function(err, rawCode) {
        var cs, error;
        if (err) {
          console.log(colors.red + 'compileAsset() error:' + colors.reset, err);
        }
        console.log(colors.cyan + 'CoffeeScript:' + colors.reset, file.replace(app.cfg.path, ''));
        try {
          cs = coffee.compile(rawCode);
        } catch (_error) {
          error = _error;
          return console.log(colors.red + 'CoffeeScript error:' + colors.reset, file.replace(app.cfg.path, '') + ':', error.message, "on lines:", error.location.first_line + '-' + error.location.last_line);
        }
        if (error == null) {
          return app.fs.writeFile(file.replace('.coffee', '.js'), cs, function(err) {
            if (err) {
              return console.log(colors.red + 'autocompile write error! file' + colors.reset, file.replace('.coffee', '.js'), 'error:', err);
            }
          });
        }
      });
    };
    return app.compiler['.scss'] = function(file) {
      var _this = this;
      return sass.render({
        file: file,
        success: function(css) {
          return app.fs.writeFile(file.replace('.scss', '.css'), css, function(err) {
            if (err) {
              return console.log(colors.red + 'autocompile write error! file' + colors.reset, file.replace('.scss', '.css'), 'error:', err);
            }
          });
        },
        error: function(error) {
          return console.log('SCSS Compile error:', error);
        }
      });
    };
  };

}).call(this);
